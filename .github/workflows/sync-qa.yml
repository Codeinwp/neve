name: Deploy to stagings
on:
  push:
    branches:
      - development
      - "!master"
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
  cancel-in-progress: true
jobs:
  deploy:
    name: Deploy to QA server
    runs-on: ubuntu-latest
    if: github.repository == 'Codeinwp/neve'
    env:
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      QA_DS_STAGING_ROOT: ${{ secrets.QA_DS_STAGING_ROOT }}
      PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
      CYPRESS_INSTALL_BINARY: 0
    steps:
      - uses: actions/checkout@master
      - name: Setup node 14
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Build dist
        run: |
          composer install --no-dev --prefer-dist --no-progress --no-suggest
          npm ci
          npm run build
          npm run dist
      - name: Sync to QA server via SFTP
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          server: ${{ secrets.QA_FTP_HOST }}
          username: ${{ secrets.QA_FTP_USER }}
          password: ${{ secrets.QA_FTP_PASS }}
          sftp_only: true
          local_path: "./dist/neve/*"
          remote_path: ${{ secrets.QA_FTP_PATH }}
      - name: Add SSH Key
        run: |
          mkdir $HOME/.ssh
          echo "$SSH_KEY" > "$HOME/.ssh/key"
          chmod 600 "$HOME/.ssh/key"
      - uses: chrnorm/deployment-action@releases/v1
        name: Create deployment staging.demosites.io
        id: deployment
        with:
          token: ${{ secrets.BOT_TOKEN }}
          target_url: https://staging.demosites.io/neve-3-gb/
          environment: staging
      - name: Deploy to staging.demosites.io
        run: |
          rsync -rc --exclude-from="$GITHUB_WORKSPACE/.distignore" -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no -p $SSH_PORT" "$GITHUB_WORKSPACE/" $SSH_USERNAME@$SSH_HOST:$QA_DS_STAGING_ROOT
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.BOT_TOKEN }}
          target_url: https://staging.demosites.io/neve-3-gb/
          state: success
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
