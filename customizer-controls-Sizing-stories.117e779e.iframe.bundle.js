"use strict";(self.webpackChunkneve=self.webpackChunkneve||[]).push([[60],{"./stories/customizer-controls/Sizing.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,EmptyValues:()=>EmptyValues,NoLinking:()=>NoLinking,UnlinkedDefaults:()=>UnlinkedDefaults,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _assets_apps_components_src_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./assets/apps/components/src/components.js"),_components_decorators__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./stories/components/decorators.js"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Customizer/Controls/Sizing",component:_assets_apps_components_src_components__WEBPACK_IMPORTED_MODULE_0__.kP,args:{label:"Sizing Control",max:100,min:0,step:1,defaults:{top:10,right:10,bottom:10,left:10},linked:!1,noLinking:!1},decorators:[_components_decorators__WEBPACK_IMPORTED_MODULE_1__.$,_components_decorators__WEBPACK_IMPORTED_MODULE_1__.x]},Template=args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(args.defaults),options=[{type:"top",label:"Top",value:value.top},{type:"right",label:"Right",value:value.right},{type:"bottom",label:"Bottom",value:value.bottom},{type:"left",label:"Left",value:value.left}];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_assets_apps_components_src_components__WEBPACK_IMPORTED_MODULE_0__.kP,{...args,value,options,onReset:()=>{setValue(args.defaults)},onChange:setValue}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"value-previewer",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("strong",{children:"Value:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("pre",{children:JSON.stringify(value,null," ")})]})]})},Default=Template.bind({}),UnlinkedDefaults=Template.bind({});UnlinkedDefaults.args={defaults:{top:0,right:10,bottom:0,left:10}};const NoLinking=Template.bind({});NoLinking.args={noLinking:!0,defaults:{top:0,right:10,bottom:0,left:10}};const EmptyValues=Template.bind({});EmptyValues.args={defaults:{top:"",right:"",bottom:"",left:""}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.defaults);\n  const options = [{\n    type: 'top',\n    label: 'Top',\n    value: value.top\n  }, {\n    type: 'right',\n    label: 'Right',\n    value: value.right\n  }, {\n    type: 'bottom',\n    label: 'Bottom',\n    value: value.bottom\n  }, {\n    type: 'left',\n    label: 'Left',\n    value: value.left\n  }];\n  const handleReset = () => {\n    setValue(args.defaults);\n  };\n  return <>\n            <SizingControl {...args} value={value} options={options} onReset={handleReset} onChange={setValue} />\n            <div className=\"value-previewer\">\n                <strong>Value:</strong>\n                <pre>{JSON.stringify(value, null, ' ')}</pre>\n            </div>\n        </>;\n}",...Default.parameters?.docs?.source}}},UnlinkedDefaults.parameters={...UnlinkedDefaults.parameters,docs:{...UnlinkedDefaults.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.defaults);\n  const options = [{\n    type: 'top',\n    label: 'Top',\n    value: value.top\n  }, {\n    type: 'right',\n    label: 'Right',\n    value: value.right\n  }, {\n    type: 'bottom',\n    label: 'Bottom',\n    value: value.bottom\n  }, {\n    type: 'left',\n    label: 'Left',\n    value: value.left\n  }];\n  const handleReset = () => {\n    setValue(args.defaults);\n  };\n  return <>\n            <SizingControl {...args} value={value} options={options} onReset={handleReset} onChange={setValue} />\n            <div className=\"value-previewer\">\n                <strong>Value:</strong>\n                <pre>{JSON.stringify(value, null, ' ')}</pre>\n            </div>\n        </>;\n}",...UnlinkedDefaults.parameters?.docs?.source}}},NoLinking.parameters={...NoLinking.parameters,docs:{...NoLinking.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.defaults);\n  const options = [{\n    type: 'top',\n    label: 'Top',\n    value: value.top\n  }, {\n    type: 'right',\n    label: 'Right',\n    value: value.right\n  }, {\n    type: 'bottom',\n    label: 'Bottom',\n    value: value.bottom\n  }, {\n    type: 'left',\n    label: 'Left',\n    value: value.left\n  }];\n  const handleReset = () => {\n    setValue(args.defaults);\n  };\n  return <>\n            <SizingControl {...args} value={value} options={options} onReset={handleReset} onChange={setValue} />\n            <div className=\"value-previewer\">\n                <strong>Value:</strong>\n                <pre>{JSON.stringify(value, null, ' ')}</pre>\n            </div>\n        </>;\n}",...NoLinking.parameters?.docs?.source}}},EmptyValues.parameters={...EmptyValues.parameters,docs:{...EmptyValues.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.defaults);\n  const options = [{\n    type: 'top',\n    label: 'Top',\n    value: value.top\n  }, {\n    type: 'right',\n    label: 'Right',\n    value: value.right\n  }, {\n    type: 'bottom',\n    label: 'Bottom',\n    value: value.bottom\n  }, {\n    type: 'left',\n    label: 'Left',\n    value: value.left\n  }];\n  const handleReset = () => {\n    setValue(args.defaults);\n  };\n  return <>\n            <SizingControl {...args} value={value} options={options} onReset={handleReset} onChange={setValue} />\n            <div className=\"value-previewer\">\n                <strong>Value:</strong>\n                <pre>{JSON.stringify(value, null, ' ')}</pre>\n            </div>\n        </>;\n}",...EmptyValues.parameters?.docs?.source}}};const __namedExportsOrder=["Default","UnlinkedDefaults","NoLinking","EmptyValues"]}}]);