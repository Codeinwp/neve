language: php
dist: trusty
env:
  - WP_VERSION=latest UPSTREAM_REPO=Codeinwp/neve MASTER_BRANCH=master STORE_URL=https://store.themeisle.com
cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/.npm
jobs:
  include:
    - stage: teste2e
      php: 7.0
      name: E2E tests
      script:
        - ./bin/run-e2e.sh
    - stage: test
      php: 7.0
      name: "Different linters"
      before_install:
        - nvm install && nvm use
        - npm install npm -g
      script:
        - travis_retry npm install
        - travis_retry composer install
        - npm run-script test
        - npm run build
        - npm run-script size
    - php: 5.2
      name: "Unit tests for PHP 5.2"
      env: WP_VERSION=5.1.1
      dist: precise
      script:
        - ./bin/run-unit-tests.sh
    - php: 5.3
      name: "Unit tests for PHP 5.3"
      env: WP_VERSION=5.1.1
      dist: precise
      script:
        - ./bin/run-unit-tests.sh
    - php: 5.4
      name: "Unit tests for PHP 5.4"
      env: WP_VERSION=5.1.1
      script:
        - ./bin/run-unit-tests.sh
    - php: 5.5
      name: "Unit tests for PHP 5.5"
      env: WP_VERSION=5.1.1
      script:
        - ./bin/run-unit-tests.sh
    - php: 5.6
      name: "Unit tests for PHP 5.6"
      script:
        - ./bin/run-unit-tests.sh
    - php: 7.0
      name: "Unit tests for PHP 7.0"
      script:
        - ./bin/run-unit-tests.sh
    - php: 7.1
      name: "Unit tests for PHP 7.1"
      script:
        - ./bin/run-unit-tests.sh
    - php: 7.0
      if: repo = env(UPSTREAM_REPO)
      name: "Blackfire tests"
      env: WP_VERSION=latest
      script:
        - ./bin/run-blackfire.sh
    - stage: qa
      name: "QA"
      php: 7.0
      script:
        - ./bin/sync-qa.sh
    - stage: deploy
      name: "Deployment"
      php: 7.0
      before_install:
        - nvm install && nvm use
        - npm install npm -g
      script:
        - travis_retry npm install
        - travis_retry composer install --no-dev --no-interaction --ignore-platform-reqs
      before_deploy:
        - ". ./bin/prepare-deploy.sh"
      deploy:
        - provider: script
          script: ./bin/deploy.sh
          skip_cleanup: true
          on:
            all_branches: true
        - provider: s3
          access_key_id: "$AWS_ACCESS_KEY"
          secret_access_key: "$AWS_SECRET_KEY"
          bucket: "$AWS_BUCKET"
          skip_cleanup: true
          acl: public_read
          overwrite: true
          local-dir: artifact/
          upload-dir: "$AWS_PRODUCTS_FOLDER/$BUILD_NAME/latest"
          on:
            all_branches: true
        - provider: s3
          access_key_id: "$AWS_ACCESS_KEY"
          secret_access_key: "$AWS_SECRET_KEY"
          bucket: "$AWS_BUCKET"
          skip_cleanup: true
          acl: public_read
          overwrite: true
          local-dir: artifact/
          upload-dir: "$AWS_PRODUCTS_FOLDER/$BUILD_NAME/$BUILD_VERSION"
          on:
            all_branches: true
stages:
  - name: deploy
    if: branch = env(MASTER_BRANCH) and type != "pull_request" and repo = env(UPSTREAM_REPO)
  - name: test
    if: type = "pull_request"
  - name: qa
    if: type = "pull_request" and head_branch="development" and repo = env(UPSTREAM_REPO)
  - name: teste2e
    if: type = "pull_request" and head_repo = env(UPSTREAM_REPO)
